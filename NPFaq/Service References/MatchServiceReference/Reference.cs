//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace NPFaq.MatchServiceReference {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MatchAttach", Namespace="http://schemas.datacontract.org/2004/07/NPFaq.Web.Models")]
    public partial class MatchAttach : NPFaq.MatchServiceReference.attach {
        
        private long SizeField;
        
        private byte[] ThumbnailField;
        
        private string URLField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Size {
            get {
                return this.SizeField;
            }
            set {
                if ((this.SizeField.Equals(value) != true)) {
                    this.SizeField = value;
                    this.RaisePropertyChanged("Size");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Thumbnail {
            get {
                return this.ThumbnailField;
            }
            set {
                if ((object.ReferenceEquals(this.ThumbnailField, value) != true)) {
                    this.ThumbnailField = value;
                    this.RaisePropertyChanged("Thumbnail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string URL {
            get {
                return this.URLField;
            }
            set {
                if ((object.ReferenceEquals(this.URLField, value) != true)) {
                    this.URLField = value;
                    this.RaisePropertyChanged("URL");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="attach", Namespace="http://schemas.datacontract.org/2004/07/NPFaq.Web")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NPFaq.MatchServiceReference.MatchAttach))]
    public partial class attach : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string FileNameField;
        
        private int IDField;
        
        private string PathField;
        
        private string TypeField;
        
        private System.Nullable<int> TypeIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Path {
            get {
                return this.PathField;
            }
            set {
                if ((object.ReferenceEquals(this.PathField, value) != true)) {
                    this.PathField = value;
                    this.RaisePropertyChanged("Path");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TypeID {
            get {
                return this.TypeIDField;
            }
            set {
                if ((this.TypeIDField.Equals(value) != true)) {
                    this.TypeIDField = value;
                    this.RaisePropertyChanged("TypeID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="user", Namespace="http://schemas.datacontract.org/2004/07/NPFaq.Web")]
    public partial class user : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int IDField;
        
        private string InfoField;
        
        private string NameField;
        
        private string PasswordField;
        
        private System.Nullable<int> TelField;
        
        private string UserTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Info {
            get {
                return this.InfoField;
            }
            set {
                if ((object.ReferenceEquals(this.InfoField, value) != true)) {
                    this.InfoField = value;
                    this.RaisePropertyChanged("Info");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Tel {
            get {
                return this.TelField;
            }
            set {
                if ((this.TelField.Equals(value) != true)) {
                    this.TelField = value;
                    this.RaisePropertyChanged("Tel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserType {
            get {
                return this.UserTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.UserTypeField, value) != true)) {
                    this.UserTypeField = value;
                    this.RaisePropertyChanged("UserType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="match", Namespace="http://schemas.datacontract.org/2004/07/NPFaq.Web")]
    public partial class match : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AddressField;
        
        private string DescriptionField;
        
        private System.Nullable<System.DateTime> EndSignField;
        
        private System.Nullable<System.DateTime> EndTimeField;
        
        private int IDField;
        
        private string LevelField;
        
        private string NameField;
        
        private System.Nullable<int> PublisherIDField;
        
        private string SponsorField;
        
        private System.Nullable<System.DateTime> StartSignField;
        
        private System.Nullable<System.DateTime> StartTimeField;
        
        private string StatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EndSign {
            get {
                return this.EndSignField;
            }
            set {
                if ((this.EndSignField.Equals(value) != true)) {
                    this.EndSignField = value;
                    this.RaisePropertyChanged("EndSign");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EndTime {
            get {
                return this.EndTimeField;
            }
            set {
                if ((this.EndTimeField.Equals(value) != true)) {
                    this.EndTimeField = value;
                    this.RaisePropertyChanged("EndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Level {
            get {
                return this.LevelField;
            }
            set {
                if ((object.ReferenceEquals(this.LevelField, value) != true)) {
                    this.LevelField = value;
                    this.RaisePropertyChanged("Level");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PublisherID {
            get {
                return this.PublisherIDField;
            }
            set {
                if ((this.PublisherIDField.Equals(value) != true)) {
                    this.PublisherIDField = value;
                    this.RaisePropertyChanged("PublisherID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sponsor {
            get {
                return this.SponsorField;
            }
            set {
                if ((object.ReferenceEquals(this.SponsorField, value) != true)) {
                    this.SponsorField = value;
                    this.RaisePropertyChanged("Sponsor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> StartSign {
            get {
                return this.StartSignField;
            }
            set {
                if ((this.StartSignField.Equals(value) != true)) {
                    this.StartSignField = value;
                    this.RaisePropertyChanged("StartSign");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="team", Namespace="http://schemas.datacontract.org/2004/07/NPFaq.Web")]
    public partial class team : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int IDField;
        
        private string IntroduceField;
        
        private System.Nullable<bool> IsCheckedField;
        
        private System.Nullable<bool> IsResultCheckedField;
        
        private System.Nullable<int> MatchIDField;
        
        private string NameField;
        
        private string RankField;
        
        private string ResultField;
        
        private System.Nullable<int> TeacherIDField;
        
        private string TeamLeaderField;
        
        private string TeamMembersField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Introduce {
            get {
                return this.IntroduceField;
            }
            set {
                if ((object.ReferenceEquals(this.IntroduceField, value) != true)) {
                    this.IntroduceField = value;
                    this.RaisePropertyChanged("Introduce");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsChecked {
            get {
                return this.IsCheckedField;
            }
            set {
                if ((this.IsCheckedField.Equals(value) != true)) {
                    this.IsCheckedField = value;
                    this.RaisePropertyChanged("IsChecked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsResultChecked {
            get {
                return this.IsResultCheckedField;
            }
            set {
                if ((this.IsResultCheckedField.Equals(value) != true)) {
                    this.IsResultCheckedField = value;
                    this.RaisePropertyChanged("IsResultChecked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MatchID {
            get {
                return this.MatchIDField;
            }
            set {
                if ((this.MatchIDField.Equals(value) != true)) {
                    this.MatchIDField = value;
                    this.RaisePropertyChanged("MatchID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Rank {
            get {
                return this.RankField;
            }
            set {
                if ((object.ReferenceEquals(this.RankField, value) != true)) {
                    this.RankField = value;
                    this.RaisePropertyChanged("Rank");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TeacherID {
            get {
                return this.TeacherIDField;
            }
            set {
                if ((this.TeacherIDField.Equals(value) != true)) {
                    this.TeacherIDField = value;
                    this.RaisePropertyChanged("TeacherID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TeamLeader {
            get {
                return this.TeamLeaderField;
            }
            set {
                if ((object.ReferenceEquals(this.TeamLeaderField, value) != true)) {
                    this.TeamLeaderField = value;
                    this.RaisePropertyChanged("TeamLeader");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TeamMembers {
            get {
                return this.TeamMembersField;
            }
            set {
                if ((object.ReferenceEquals(this.TeamMembersField, value) != true)) {
                    this.TeamMembersField = value;
                    this.RaisePropertyChanged("TeamMembers");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MatchServiceReference.IMatchService")]
    public interface IMatchService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMatchService/DoWork", ReplyAction="http://tempuri.org/IMatchService/DoWorkResponse")]
        System.IAsyncResult BeginDoWork(System.AsyncCallback callback, object asyncState);
        
        void EndDoWork(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMatchService/GetAttachsByIDAndType", ReplyAction="http://tempuri.org/IMatchService/GetAttachsByIDAndTypeResponse")]
        System.IAsyncResult BeginGetAttachsByIDAndType(int id, string type, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<NPFaq.MatchServiceReference.MatchAttach> EndGetAttachsByIDAndType(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMatchService/Login", ReplyAction="http://tempuri.org/IMatchService/LoginResponse")]
        System.IAsyncResult BeginLogin(string userName, string password, System.AsyncCallback callback, object asyncState);
        
        bool EndLogin(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMatchService/GetAllUsers", ReplyAction="http://tempuri.org/IMatchService/GetAllUsersResponse")]
        System.IAsyncResult BeginGetAllUsers(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<NPFaq.MatchServiceReference.user> EndGetAllUsers(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMatchService/GetUserByName", ReplyAction="http://tempuri.org/IMatchService/GetUserByNameResponse")]
        System.IAsyncResult BeginGetUserByName(string userName, System.AsyncCallback callback, object asyncState);
        
        NPFaq.MatchServiceReference.user EndGetUserByName(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMatchService/AddOrUpdateUser", ReplyAction="http://tempuri.org/IMatchService/AddOrUpdateUserResponse")]
        System.IAsyncResult BeginAddOrUpdateUser(NPFaq.MatchServiceReference.user user, System.AsyncCallback callback, object asyncState);
        
        void EndAddOrUpdateUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMatchService/SearchUser", ReplyAction="http://tempuri.org/IMatchService/SearchUserResponse")]
        System.IAsyncResult BeginSearchUser(string name, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<NPFaq.MatchServiceReference.user> EndSearchUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMatchService/DeleteUserByID", ReplyAction="http://tempuri.org/IMatchService/DeleteUserByIDResponse")]
        System.IAsyncResult BeginDeleteUserByID(System.Collections.ObjectModel.ObservableCollection<int> id, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteUserByID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMatchService/AlterPassword", ReplyAction="http://tempuri.org/IMatchService/AlterPasswordResponse")]
        System.IAsyncResult BeginAlterPassword(int id, string oldPwd, string newPwd, System.AsyncCallback callback, object asyncState);
        
        bool EndAlterPassword(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMatchService/GetAllMatches", ReplyAction="http://tempuri.org/IMatchService/GetAllMatchesResponse")]
        System.IAsyncResult BeginGetAllMatches(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<NPFaq.MatchServiceReference.match> EndGetAllMatches(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMatchService/AddOrUpdateMatch", ReplyAction="http://tempuri.org/IMatchService/AddOrUpdateMatchResponse")]
        System.IAsyncResult BeginAddOrUpdateMatch(NPFaq.MatchServiceReference.match match, System.AsyncCallback callback, object asyncState);
        
        int EndAddOrUpdateMatch(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMatchService/SearchMatch", ReplyAction="http://tempuri.org/IMatchService/SearchMatchResponse")]
        System.IAsyncResult BeginSearchMatch(string name, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<NPFaq.MatchServiceReference.match> EndSearchMatch(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMatchService/DeleteMatchByID", ReplyAction="http://tempuri.org/IMatchService/DeleteMatchByIDResponse")]
        System.IAsyncResult BeginDeleteMatchByID(System.Collections.ObjectModel.ObservableCollection<int> id, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteMatchByID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMatchService/GetAllTeams", ReplyAction="http://tempuri.org/IMatchService/GetAllTeamsResponse")]
        System.IAsyncResult BeginGetAllTeams(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<NPFaq.MatchServiceReference.team> EndGetAllTeams(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMatchService/AddOrUpdateTeam", ReplyAction="http://tempuri.org/IMatchService/AddOrUpdateTeamResponse")]
        System.IAsyncResult BeginAddOrUpdateTeam(NPFaq.MatchServiceReference.team team, System.AsyncCallback callback, object asyncState);
        
        int EndAddOrUpdateTeam(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMatchService/SearchTeam", ReplyAction="http://tempuri.org/IMatchService/SearchTeamResponse")]
        System.IAsyncResult BeginSearchTeam(string name, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<NPFaq.MatchServiceReference.team> EndSearchTeam(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMatchService/DeleteTeamByID", ReplyAction="http://tempuri.org/IMatchService/DeleteTeamByIDResponse")]
        System.IAsyncResult BeginDeleteTeamByID(System.Collections.ObjectModel.ObservableCollection<int> id, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteTeamByID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMatchService/AddAttaches", ReplyAction="http://tempuri.org/IMatchService/AddAttachesResponse")]
        System.IAsyncResult BeginAddAttaches(System.Collections.ObjectModel.ObservableCollection<NPFaq.MatchServiceReference.attach> attaches, System.AsyncCallback callback, object asyncState);
        
        void EndAddAttaches(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMatchService/DeleteAttachesByMID", ReplyAction="http://tempuri.org/IMatchService/DeleteAttachesByMIDResponse")]
        System.IAsyncResult BeginDeleteAttachesByMID(int id, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteAttachesByMID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMatchService/GetUserByID", ReplyAction="http://tempuri.org/IMatchService/GetUserByIDResponse")]
        System.IAsyncResult BeginGetUserByID(int id, System.AsyncCallback callback, object asyncState);
        
        NPFaq.MatchServiceReference.user EndGetUserByID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMatchService/GetMatchByID", ReplyAction="http://tempuri.org/IMatchService/GetMatchByIDResponse")]
        System.IAsyncResult BeginGetMatchByID(int id, System.AsyncCallback callback, object asyncState);
        
        NPFaq.MatchServiceReference.match EndGetMatchByID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMatchService/ReviewTeam", ReplyAction="http://tempuri.org/IMatchService/ReviewTeamResponse")]
        System.IAsyncResult BeginReviewTeam(System.Collections.ObjectModel.ObservableCollection<int> id, System.AsyncCallback callback, object asyncState);
        
        void EndReviewTeam(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMatchService/MarkTeam", ReplyAction="http://tempuri.org/IMatchService/MarkTeamResponse")]
        System.IAsyncResult BeginMarkTeam(int id, string result, string rank, System.AsyncCallback callback, object asyncState);
        
        void EndMarkTeam(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMatchServiceChannel : NPFaq.MatchServiceReference.IMatchService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAttachsByIDAndTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAttachsByIDAndTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<NPFaq.MatchServiceReference.MatchAttach> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<NPFaq.MatchServiceReference.MatchAttach>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<NPFaq.MatchServiceReference.user> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<NPFaq.MatchServiceReference.user>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUserByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUserByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public NPFaq.MatchServiceReference.user Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((NPFaq.MatchServiceReference.user)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SearchUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SearchUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<NPFaq.MatchServiceReference.user> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<NPFaq.MatchServiceReference.user>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AlterPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AlterPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllMatchesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllMatchesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<NPFaq.MatchServiceReference.match> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<NPFaq.MatchServiceReference.match>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddOrUpdateMatchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddOrUpdateMatchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SearchMatchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SearchMatchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<NPFaq.MatchServiceReference.match> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<NPFaq.MatchServiceReference.match>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllTeamsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllTeamsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<NPFaq.MatchServiceReference.team> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<NPFaq.MatchServiceReference.team>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddOrUpdateTeamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddOrUpdateTeamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SearchTeamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SearchTeamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<NPFaq.MatchServiceReference.team> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<NPFaq.MatchServiceReference.team>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUserByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUserByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public NPFaq.MatchServiceReference.user Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((NPFaq.MatchServiceReference.user)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMatchByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMatchByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public NPFaq.MatchServiceReference.match Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((NPFaq.MatchServiceReference.match)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MatchServiceClient : System.ServiceModel.ClientBase<NPFaq.MatchServiceReference.IMatchService>, NPFaq.MatchServiceReference.IMatchService {
        
        private BeginOperationDelegate onBeginDoWorkDelegate;
        
        private EndOperationDelegate onEndDoWorkDelegate;
        
        private System.Threading.SendOrPostCallback onDoWorkCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAttachsByIDAndTypeDelegate;
        
        private EndOperationDelegate onEndGetAttachsByIDAndTypeDelegate;
        
        private System.Threading.SendOrPostCallback onGetAttachsByIDAndTypeCompletedDelegate;
        
        private BeginOperationDelegate onBeginLoginDelegate;
        
        private EndOperationDelegate onEndLoginDelegate;
        
        private System.Threading.SendOrPostCallback onLoginCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllUsersDelegate;
        
        private EndOperationDelegate onEndGetAllUsersDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllUsersCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUserByNameDelegate;
        
        private EndOperationDelegate onEndGetUserByNameDelegate;
        
        private System.Threading.SendOrPostCallback onGetUserByNameCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddOrUpdateUserDelegate;
        
        private EndOperationDelegate onEndAddOrUpdateUserDelegate;
        
        private System.Threading.SendOrPostCallback onAddOrUpdateUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginSearchUserDelegate;
        
        private EndOperationDelegate onEndSearchUserDelegate;
        
        private System.Threading.SendOrPostCallback onSearchUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteUserByIDDelegate;
        
        private EndOperationDelegate onEndDeleteUserByIDDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteUserByIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginAlterPasswordDelegate;
        
        private EndOperationDelegate onEndAlterPasswordDelegate;
        
        private System.Threading.SendOrPostCallback onAlterPasswordCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllMatchesDelegate;
        
        private EndOperationDelegate onEndGetAllMatchesDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllMatchesCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddOrUpdateMatchDelegate;
        
        private EndOperationDelegate onEndAddOrUpdateMatchDelegate;
        
        private System.Threading.SendOrPostCallback onAddOrUpdateMatchCompletedDelegate;
        
        private BeginOperationDelegate onBeginSearchMatchDelegate;
        
        private EndOperationDelegate onEndSearchMatchDelegate;
        
        private System.Threading.SendOrPostCallback onSearchMatchCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteMatchByIDDelegate;
        
        private EndOperationDelegate onEndDeleteMatchByIDDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteMatchByIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllTeamsDelegate;
        
        private EndOperationDelegate onEndGetAllTeamsDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllTeamsCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddOrUpdateTeamDelegate;
        
        private EndOperationDelegate onEndAddOrUpdateTeamDelegate;
        
        private System.Threading.SendOrPostCallback onAddOrUpdateTeamCompletedDelegate;
        
        private BeginOperationDelegate onBeginSearchTeamDelegate;
        
        private EndOperationDelegate onEndSearchTeamDelegate;
        
        private System.Threading.SendOrPostCallback onSearchTeamCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteTeamByIDDelegate;
        
        private EndOperationDelegate onEndDeleteTeamByIDDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteTeamByIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddAttachesDelegate;
        
        private EndOperationDelegate onEndAddAttachesDelegate;
        
        private System.Threading.SendOrPostCallback onAddAttachesCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteAttachesByMIDDelegate;
        
        private EndOperationDelegate onEndDeleteAttachesByMIDDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteAttachesByMIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUserByIDDelegate;
        
        private EndOperationDelegate onEndGetUserByIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetUserByIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMatchByIDDelegate;
        
        private EndOperationDelegate onEndGetMatchByIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetMatchByIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginReviewTeamDelegate;
        
        private EndOperationDelegate onEndReviewTeamDelegate;
        
        private System.Threading.SendOrPostCallback onReviewTeamCompletedDelegate;
        
        private BeginOperationDelegate onBeginMarkTeamDelegate;
        
        private EndOperationDelegate onEndMarkTeamDelegate;
        
        private System.Threading.SendOrPostCallback onMarkTeamCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public MatchServiceClient() {
        }
        
        public MatchServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MatchServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MatchServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MatchServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("无法设置 CookieContainer。请确保绑定包含 HttpCookieContainerBindingElement。");
                }
            }
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DoWorkCompleted;
        
        public event System.EventHandler<GetAttachsByIDAndTypeCompletedEventArgs> GetAttachsByIDAndTypeCompleted;
        
        public event System.EventHandler<LoginCompletedEventArgs> LoginCompleted;
        
        public event System.EventHandler<GetAllUsersCompletedEventArgs> GetAllUsersCompleted;
        
        public event System.EventHandler<GetUserByNameCompletedEventArgs> GetUserByNameCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddOrUpdateUserCompleted;
        
        public event System.EventHandler<SearchUserCompletedEventArgs> SearchUserCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteUserByIDCompleted;
        
        public event System.EventHandler<AlterPasswordCompletedEventArgs> AlterPasswordCompleted;
        
        public event System.EventHandler<GetAllMatchesCompletedEventArgs> GetAllMatchesCompleted;
        
        public event System.EventHandler<AddOrUpdateMatchCompletedEventArgs> AddOrUpdateMatchCompleted;
        
        public event System.EventHandler<SearchMatchCompletedEventArgs> SearchMatchCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteMatchByIDCompleted;
        
        public event System.EventHandler<GetAllTeamsCompletedEventArgs> GetAllTeamsCompleted;
        
        public event System.EventHandler<AddOrUpdateTeamCompletedEventArgs> AddOrUpdateTeamCompleted;
        
        public event System.EventHandler<SearchTeamCompletedEventArgs> SearchTeamCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteTeamByIDCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddAttachesCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteAttachesByMIDCompleted;
        
        public event System.EventHandler<GetUserByIDCompletedEventArgs> GetUserByIDCompleted;
        
        public event System.EventHandler<GetMatchByIDCompletedEventArgs> GetMatchByIDCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ReviewTeamCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> MarkTeamCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NPFaq.MatchServiceReference.IMatchService.BeginDoWork(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDoWork(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void NPFaq.MatchServiceReference.IMatchService.EndDoWork(System.IAsyncResult result) {
            base.Channel.EndDoWork(result);
        }
        
        private System.IAsyncResult OnBeginDoWork(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((NPFaq.MatchServiceReference.IMatchService)(this)).BeginDoWork(callback, asyncState);
        }
        
        private object[] OnEndDoWork(System.IAsyncResult result) {
            ((NPFaq.MatchServiceReference.IMatchService)(this)).EndDoWork(result);
            return null;
        }
        
        private void OnDoWorkCompleted(object state) {
            if ((this.DoWorkCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DoWorkCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DoWorkAsync() {
            this.DoWorkAsync(null);
        }
        
        public void DoWorkAsync(object userState) {
            if ((this.onBeginDoWorkDelegate == null)) {
                this.onBeginDoWorkDelegate = new BeginOperationDelegate(this.OnBeginDoWork);
            }
            if ((this.onEndDoWorkDelegate == null)) {
                this.onEndDoWorkDelegate = new EndOperationDelegate(this.OnEndDoWork);
            }
            if ((this.onDoWorkCompletedDelegate == null)) {
                this.onDoWorkCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDoWorkCompleted);
            }
            base.InvokeAsync(this.onBeginDoWorkDelegate, null, this.onEndDoWorkDelegate, this.onDoWorkCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NPFaq.MatchServiceReference.IMatchService.BeginGetAttachsByIDAndType(int id, string type, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAttachsByIDAndType(id, type, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<NPFaq.MatchServiceReference.MatchAttach> NPFaq.MatchServiceReference.IMatchService.EndGetAttachsByIDAndType(System.IAsyncResult result) {
            return base.Channel.EndGetAttachsByIDAndType(result);
        }
        
        private System.IAsyncResult OnBeginGetAttachsByIDAndType(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            string type = ((string)(inValues[1]));
            return ((NPFaq.MatchServiceReference.IMatchService)(this)).BeginGetAttachsByIDAndType(id, type, callback, asyncState);
        }
        
        private object[] OnEndGetAttachsByIDAndType(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<NPFaq.MatchServiceReference.MatchAttach> retVal = ((NPFaq.MatchServiceReference.IMatchService)(this)).EndGetAttachsByIDAndType(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAttachsByIDAndTypeCompleted(object state) {
            if ((this.GetAttachsByIDAndTypeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAttachsByIDAndTypeCompleted(this, new GetAttachsByIDAndTypeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAttachsByIDAndTypeAsync(int id, string type) {
            this.GetAttachsByIDAndTypeAsync(id, type, null);
        }
        
        public void GetAttachsByIDAndTypeAsync(int id, string type, object userState) {
            if ((this.onBeginGetAttachsByIDAndTypeDelegate == null)) {
                this.onBeginGetAttachsByIDAndTypeDelegate = new BeginOperationDelegate(this.OnBeginGetAttachsByIDAndType);
            }
            if ((this.onEndGetAttachsByIDAndTypeDelegate == null)) {
                this.onEndGetAttachsByIDAndTypeDelegate = new EndOperationDelegate(this.OnEndGetAttachsByIDAndType);
            }
            if ((this.onGetAttachsByIDAndTypeCompletedDelegate == null)) {
                this.onGetAttachsByIDAndTypeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAttachsByIDAndTypeCompleted);
            }
            base.InvokeAsync(this.onBeginGetAttachsByIDAndTypeDelegate, new object[] {
                        id,
                        type}, this.onEndGetAttachsByIDAndTypeDelegate, this.onGetAttachsByIDAndTypeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NPFaq.MatchServiceReference.IMatchService.BeginLogin(string userName, string password, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLogin(userName, password, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool NPFaq.MatchServiceReference.IMatchService.EndLogin(System.IAsyncResult result) {
            return base.Channel.EndLogin(result);
        }
        
        private System.IAsyncResult OnBeginLogin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userName = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            return ((NPFaq.MatchServiceReference.IMatchService)(this)).BeginLogin(userName, password, callback, asyncState);
        }
        
        private object[] OnEndLogin(System.IAsyncResult result) {
            bool retVal = ((NPFaq.MatchServiceReference.IMatchService)(this)).EndLogin(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLoginCompleted(object state) {
            if ((this.LoginCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoginCompleted(this, new LoginCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoginAsync(string userName, string password) {
            this.LoginAsync(userName, password, null);
        }
        
        public void LoginAsync(string userName, string password, object userState) {
            if ((this.onBeginLoginDelegate == null)) {
                this.onBeginLoginDelegate = new BeginOperationDelegate(this.OnBeginLogin);
            }
            if ((this.onEndLoginDelegate == null)) {
                this.onEndLoginDelegate = new EndOperationDelegate(this.OnEndLogin);
            }
            if ((this.onLoginCompletedDelegate == null)) {
                this.onLoginCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoginCompleted);
            }
            base.InvokeAsync(this.onBeginLoginDelegate, new object[] {
                        userName,
                        password}, this.onEndLoginDelegate, this.onLoginCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NPFaq.MatchServiceReference.IMatchService.BeginGetAllUsers(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllUsers(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<NPFaq.MatchServiceReference.user> NPFaq.MatchServiceReference.IMatchService.EndGetAllUsers(System.IAsyncResult result) {
            return base.Channel.EndGetAllUsers(result);
        }
        
        private System.IAsyncResult OnBeginGetAllUsers(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((NPFaq.MatchServiceReference.IMatchService)(this)).BeginGetAllUsers(callback, asyncState);
        }
        
        private object[] OnEndGetAllUsers(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<NPFaq.MatchServiceReference.user> retVal = ((NPFaq.MatchServiceReference.IMatchService)(this)).EndGetAllUsers(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllUsersCompleted(object state) {
            if ((this.GetAllUsersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllUsersCompleted(this, new GetAllUsersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllUsersAsync() {
            this.GetAllUsersAsync(null);
        }
        
        public void GetAllUsersAsync(object userState) {
            if ((this.onBeginGetAllUsersDelegate == null)) {
                this.onBeginGetAllUsersDelegate = new BeginOperationDelegate(this.OnBeginGetAllUsers);
            }
            if ((this.onEndGetAllUsersDelegate == null)) {
                this.onEndGetAllUsersDelegate = new EndOperationDelegate(this.OnEndGetAllUsers);
            }
            if ((this.onGetAllUsersCompletedDelegate == null)) {
                this.onGetAllUsersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllUsersCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllUsersDelegate, null, this.onEndGetAllUsersDelegate, this.onGetAllUsersCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NPFaq.MatchServiceReference.IMatchService.BeginGetUserByName(string userName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUserByName(userName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NPFaq.MatchServiceReference.user NPFaq.MatchServiceReference.IMatchService.EndGetUserByName(System.IAsyncResult result) {
            return base.Channel.EndGetUserByName(result);
        }
        
        private System.IAsyncResult OnBeginGetUserByName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userName = ((string)(inValues[0]));
            return ((NPFaq.MatchServiceReference.IMatchService)(this)).BeginGetUserByName(userName, callback, asyncState);
        }
        
        private object[] OnEndGetUserByName(System.IAsyncResult result) {
            NPFaq.MatchServiceReference.user retVal = ((NPFaq.MatchServiceReference.IMatchService)(this)).EndGetUserByName(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUserByNameCompleted(object state) {
            if ((this.GetUserByNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUserByNameCompleted(this, new GetUserByNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUserByNameAsync(string userName) {
            this.GetUserByNameAsync(userName, null);
        }
        
        public void GetUserByNameAsync(string userName, object userState) {
            if ((this.onBeginGetUserByNameDelegate == null)) {
                this.onBeginGetUserByNameDelegate = new BeginOperationDelegate(this.OnBeginGetUserByName);
            }
            if ((this.onEndGetUserByNameDelegate == null)) {
                this.onEndGetUserByNameDelegate = new EndOperationDelegate(this.OnEndGetUserByName);
            }
            if ((this.onGetUserByNameCompletedDelegate == null)) {
                this.onGetUserByNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUserByNameCompleted);
            }
            base.InvokeAsync(this.onBeginGetUserByNameDelegate, new object[] {
                        userName}, this.onEndGetUserByNameDelegate, this.onGetUserByNameCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NPFaq.MatchServiceReference.IMatchService.BeginAddOrUpdateUser(NPFaq.MatchServiceReference.user user, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddOrUpdateUser(user, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void NPFaq.MatchServiceReference.IMatchService.EndAddOrUpdateUser(System.IAsyncResult result) {
            base.Channel.EndAddOrUpdateUser(result);
        }
        
        private System.IAsyncResult OnBeginAddOrUpdateUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NPFaq.MatchServiceReference.user user = ((NPFaq.MatchServiceReference.user)(inValues[0]));
            return ((NPFaq.MatchServiceReference.IMatchService)(this)).BeginAddOrUpdateUser(user, callback, asyncState);
        }
        
        private object[] OnEndAddOrUpdateUser(System.IAsyncResult result) {
            ((NPFaq.MatchServiceReference.IMatchService)(this)).EndAddOrUpdateUser(result);
            return null;
        }
        
        private void OnAddOrUpdateUserCompleted(object state) {
            if ((this.AddOrUpdateUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddOrUpdateUserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddOrUpdateUserAsync(NPFaq.MatchServiceReference.user user) {
            this.AddOrUpdateUserAsync(user, null);
        }
        
        public void AddOrUpdateUserAsync(NPFaq.MatchServiceReference.user user, object userState) {
            if ((this.onBeginAddOrUpdateUserDelegate == null)) {
                this.onBeginAddOrUpdateUserDelegate = new BeginOperationDelegate(this.OnBeginAddOrUpdateUser);
            }
            if ((this.onEndAddOrUpdateUserDelegate == null)) {
                this.onEndAddOrUpdateUserDelegate = new EndOperationDelegate(this.OnEndAddOrUpdateUser);
            }
            if ((this.onAddOrUpdateUserCompletedDelegate == null)) {
                this.onAddOrUpdateUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddOrUpdateUserCompleted);
            }
            base.InvokeAsync(this.onBeginAddOrUpdateUserDelegate, new object[] {
                        user}, this.onEndAddOrUpdateUserDelegate, this.onAddOrUpdateUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NPFaq.MatchServiceReference.IMatchService.BeginSearchUser(string name, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSearchUser(name, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<NPFaq.MatchServiceReference.user> NPFaq.MatchServiceReference.IMatchService.EndSearchUser(System.IAsyncResult result) {
            return base.Channel.EndSearchUser(result);
        }
        
        private System.IAsyncResult OnBeginSearchUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name = ((string)(inValues[0]));
            return ((NPFaq.MatchServiceReference.IMatchService)(this)).BeginSearchUser(name, callback, asyncState);
        }
        
        private object[] OnEndSearchUser(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<NPFaq.MatchServiceReference.user> retVal = ((NPFaq.MatchServiceReference.IMatchService)(this)).EndSearchUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSearchUserCompleted(object state) {
            if ((this.SearchUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SearchUserCompleted(this, new SearchUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SearchUserAsync(string name) {
            this.SearchUserAsync(name, null);
        }
        
        public void SearchUserAsync(string name, object userState) {
            if ((this.onBeginSearchUserDelegate == null)) {
                this.onBeginSearchUserDelegate = new BeginOperationDelegate(this.OnBeginSearchUser);
            }
            if ((this.onEndSearchUserDelegate == null)) {
                this.onEndSearchUserDelegate = new EndOperationDelegate(this.OnEndSearchUser);
            }
            if ((this.onSearchUserCompletedDelegate == null)) {
                this.onSearchUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSearchUserCompleted);
            }
            base.InvokeAsync(this.onBeginSearchUserDelegate, new object[] {
                        name}, this.onEndSearchUserDelegate, this.onSearchUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NPFaq.MatchServiceReference.IMatchService.BeginDeleteUserByID(System.Collections.ObjectModel.ObservableCollection<int> id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteUserByID(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void NPFaq.MatchServiceReference.IMatchService.EndDeleteUserByID(System.IAsyncResult result) {
            base.Channel.EndDeleteUserByID(result);
        }
        
        private System.IAsyncResult OnBeginDeleteUserByID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<int> id = ((System.Collections.ObjectModel.ObservableCollection<int>)(inValues[0]));
            return ((NPFaq.MatchServiceReference.IMatchService)(this)).BeginDeleteUserByID(id, callback, asyncState);
        }
        
        private object[] OnEndDeleteUserByID(System.IAsyncResult result) {
            ((NPFaq.MatchServiceReference.IMatchService)(this)).EndDeleteUserByID(result);
            return null;
        }
        
        private void OnDeleteUserByIDCompleted(object state) {
            if ((this.DeleteUserByIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteUserByIDCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteUserByIDAsync(System.Collections.ObjectModel.ObservableCollection<int> id) {
            this.DeleteUserByIDAsync(id, null);
        }
        
        public void DeleteUserByIDAsync(System.Collections.ObjectModel.ObservableCollection<int> id, object userState) {
            if ((this.onBeginDeleteUserByIDDelegate == null)) {
                this.onBeginDeleteUserByIDDelegate = new BeginOperationDelegate(this.OnBeginDeleteUserByID);
            }
            if ((this.onEndDeleteUserByIDDelegate == null)) {
                this.onEndDeleteUserByIDDelegate = new EndOperationDelegate(this.OnEndDeleteUserByID);
            }
            if ((this.onDeleteUserByIDCompletedDelegate == null)) {
                this.onDeleteUserByIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteUserByIDCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteUserByIDDelegate, new object[] {
                        id}, this.onEndDeleteUserByIDDelegate, this.onDeleteUserByIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NPFaq.MatchServiceReference.IMatchService.BeginAlterPassword(int id, string oldPwd, string newPwd, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAlterPassword(id, oldPwd, newPwd, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool NPFaq.MatchServiceReference.IMatchService.EndAlterPassword(System.IAsyncResult result) {
            return base.Channel.EndAlterPassword(result);
        }
        
        private System.IAsyncResult OnBeginAlterPassword(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            string oldPwd = ((string)(inValues[1]));
            string newPwd = ((string)(inValues[2]));
            return ((NPFaq.MatchServiceReference.IMatchService)(this)).BeginAlterPassword(id, oldPwd, newPwd, callback, asyncState);
        }
        
        private object[] OnEndAlterPassword(System.IAsyncResult result) {
            bool retVal = ((NPFaq.MatchServiceReference.IMatchService)(this)).EndAlterPassword(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAlterPasswordCompleted(object state) {
            if ((this.AlterPasswordCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AlterPasswordCompleted(this, new AlterPasswordCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AlterPasswordAsync(int id, string oldPwd, string newPwd) {
            this.AlterPasswordAsync(id, oldPwd, newPwd, null);
        }
        
        public void AlterPasswordAsync(int id, string oldPwd, string newPwd, object userState) {
            if ((this.onBeginAlterPasswordDelegate == null)) {
                this.onBeginAlterPasswordDelegate = new BeginOperationDelegate(this.OnBeginAlterPassword);
            }
            if ((this.onEndAlterPasswordDelegate == null)) {
                this.onEndAlterPasswordDelegate = new EndOperationDelegate(this.OnEndAlterPassword);
            }
            if ((this.onAlterPasswordCompletedDelegate == null)) {
                this.onAlterPasswordCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAlterPasswordCompleted);
            }
            base.InvokeAsync(this.onBeginAlterPasswordDelegate, new object[] {
                        id,
                        oldPwd,
                        newPwd}, this.onEndAlterPasswordDelegate, this.onAlterPasswordCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NPFaq.MatchServiceReference.IMatchService.BeginGetAllMatches(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllMatches(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<NPFaq.MatchServiceReference.match> NPFaq.MatchServiceReference.IMatchService.EndGetAllMatches(System.IAsyncResult result) {
            return base.Channel.EndGetAllMatches(result);
        }
        
        private System.IAsyncResult OnBeginGetAllMatches(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((NPFaq.MatchServiceReference.IMatchService)(this)).BeginGetAllMatches(callback, asyncState);
        }
        
        private object[] OnEndGetAllMatches(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<NPFaq.MatchServiceReference.match> retVal = ((NPFaq.MatchServiceReference.IMatchService)(this)).EndGetAllMatches(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllMatchesCompleted(object state) {
            if ((this.GetAllMatchesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllMatchesCompleted(this, new GetAllMatchesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllMatchesAsync() {
            this.GetAllMatchesAsync(null);
        }
        
        public void GetAllMatchesAsync(object userState) {
            if ((this.onBeginGetAllMatchesDelegate == null)) {
                this.onBeginGetAllMatchesDelegate = new BeginOperationDelegate(this.OnBeginGetAllMatches);
            }
            if ((this.onEndGetAllMatchesDelegate == null)) {
                this.onEndGetAllMatchesDelegate = new EndOperationDelegate(this.OnEndGetAllMatches);
            }
            if ((this.onGetAllMatchesCompletedDelegate == null)) {
                this.onGetAllMatchesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllMatchesCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllMatchesDelegate, null, this.onEndGetAllMatchesDelegate, this.onGetAllMatchesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NPFaq.MatchServiceReference.IMatchService.BeginAddOrUpdateMatch(NPFaq.MatchServiceReference.match match, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddOrUpdateMatch(match, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int NPFaq.MatchServiceReference.IMatchService.EndAddOrUpdateMatch(System.IAsyncResult result) {
            return base.Channel.EndAddOrUpdateMatch(result);
        }
        
        private System.IAsyncResult OnBeginAddOrUpdateMatch(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NPFaq.MatchServiceReference.match match = ((NPFaq.MatchServiceReference.match)(inValues[0]));
            return ((NPFaq.MatchServiceReference.IMatchService)(this)).BeginAddOrUpdateMatch(match, callback, asyncState);
        }
        
        private object[] OnEndAddOrUpdateMatch(System.IAsyncResult result) {
            int retVal = ((NPFaq.MatchServiceReference.IMatchService)(this)).EndAddOrUpdateMatch(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddOrUpdateMatchCompleted(object state) {
            if ((this.AddOrUpdateMatchCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddOrUpdateMatchCompleted(this, new AddOrUpdateMatchCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddOrUpdateMatchAsync(NPFaq.MatchServiceReference.match match) {
            this.AddOrUpdateMatchAsync(match, null);
        }
        
        public void AddOrUpdateMatchAsync(NPFaq.MatchServiceReference.match match, object userState) {
            if ((this.onBeginAddOrUpdateMatchDelegate == null)) {
                this.onBeginAddOrUpdateMatchDelegate = new BeginOperationDelegate(this.OnBeginAddOrUpdateMatch);
            }
            if ((this.onEndAddOrUpdateMatchDelegate == null)) {
                this.onEndAddOrUpdateMatchDelegate = new EndOperationDelegate(this.OnEndAddOrUpdateMatch);
            }
            if ((this.onAddOrUpdateMatchCompletedDelegate == null)) {
                this.onAddOrUpdateMatchCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddOrUpdateMatchCompleted);
            }
            base.InvokeAsync(this.onBeginAddOrUpdateMatchDelegate, new object[] {
                        match}, this.onEndAddOrUpdateMatchDelegate, this.onAddOrUpdateMatchCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NPFaq.MatchServiceReference.IMatchService.BeginSearchMatch(string name, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSearchMatch(name, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<NPFaq.MatchServiceReference.match> NPFaq.MatchServiceReference.IMatchService.EndSearchMatch(System.IAsyncResult result) {
            return base.Channel.EndSearchMatch(result);
        }
        
        private System.IAsyncResult OnBeginSearchMatch(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name = ((string)(inValues[0]));
            return ((NPFaq.MatchServiceReference.IMatchService)(this)).BeginSearchMatch(name, callback, asyncState);
        }
        
        private object[] OnEndSearchMatch(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<NPFaq.MatchServiceReference.match> retVal = ((NPFaq.MatchServiceReference.IMatchService)(this)).EndSearchMatch(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSearchMatchCompleted(object state) {
            if ((this.SearchMatchCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SearchMatchCompleted(this, new SearchMatchCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SearchMatchAsync(string name) {
            this.SearchMatchAsync(name, null);
        }
        
        public void SearchMatchAsync(string name, object userState) {
            if ((this.onBeginSearchMatchDelegate == null)) {
                this.onBeginSearchMatchDelegate = new BeginOperationDelegate(this.OnBeginSearchMatch);
            }
            if ((this.onEndSearchMatchDelegate == null)) {
                this.onEndSearchMatchDelegate = new EndOperationDelegate(this.OnEndSearchMatch);
            }
            if ((this.onSearchMatchCompletedDelegate == null)) {
                this.onSearchMatchCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSearchMatchCompleted);
            }
            base.InvokeAsync(this.onBeginSearchMatchDelegate, new object[] {
                        name}, this.onEndSearchMatchDelegate, this.onSearchMatchCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NPFaq.MatchServiceReference.IMatchService.BeginDeleteMatchByID(System.Collections.ObjectModel.ObservableCollection<int> id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteMatchByID(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void NPFaq.MatchServiceReference.IMatchService.EndDeleteMatchByID(System.IAsyncResult result) {
            base.Channel.EndDeleteMatchByID(result);
        }
        
        private System.IAsyncResult OnBeginDeleteMatchByID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<int> id = ((System.Collections.ObjectModel.ObservableCollection<int>)(inValues[0]));
            return ((NPFaq.MatchServiceReference.IMatchService)(this)).BeginDeleteMatchByID(id, callback, asyncState);
        }
        
        private object[] OnEndDeleteMatchByID(System.IAsyncResult result) {
            ((NPFaq.MatchServiceReference.IMatchService)(this)).EndDeleteMatchByID(result);
            return null;
        }
        
        private void OnDeleteMatchByIDCompleted(object state) {
            if ((this.DeleteMatchByIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteMatchByIDCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteMatchByIDAsync(System.Collections.ObjectModel.ObservableCollection<int> id) {
            this.DeleteMatchByIDAsync(id, null);
        }
        
        public void DeleteMatchByIDAsync(System.Collections.ObjectModel.ObservableCollection<int> id, object userState) {
            if ((this.onBeginDeleteMatchByIDDelegate == null)) {
                this.onBeginDeleteMatchByIDDelegate = new BeginOperationDelegate(this.OnBeginDeleteMatchByID);
            }
            if ((this.onEndDeleteMatchByIDDelegate == null)) {
                this.onEndDeleteMatchByIDDelegate = new EndOperationDelegate(this.OnEndDeleteMatchByID);
            }
            if ((this.onDeleteMatchByIDCompletedDelegate == null)) {
                this.onDeleteMatchByIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteMatchByIDCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteMatchByIDDelegate, new object[] {
                        id}, this.onEndDeleteMatchByIDDelegate, this.onDeleteMatchByIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NPFaq.MatchServiceReference.IMatchService.BeginGetAllTeams(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllTeams(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<NPFaq.MatchServiceReference.team> NPFaq.MatchServiceReference.IMatchService.EndGetAllTeams(System.IAsyncResult result) {
            return base.Channel.EndGetAllTeams(result);
        }
        
        private System.IAsyncResult OnBeginGetAllTeams(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((NPFaq.MatchServiceReference.IMatchService)(this)).BeginGetAllTeams(callback, asyncState);
        }
        
        private object[] OnEndGetAllTeams(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<NPFaq.MatchServiceReference.team> retVal = ((NPFaq.MatchServiceReference.IMatchService)(this)).EndGetAllTeams(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllTeamsCompleted(object state) {
            if ((this.GetAllTeamsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllTeamsCompleted(this, new GetAllTeamsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllTeamsAsync() {
            this.GetAllTeamsAsync(null);
        }
        
        public void GetAllTeamsAsync(object userState) {
            if ((this.onBeginGetAllTeamsDelegate == null)) {
                this.onBeginGetAllTeamsDelegate = new BeginOperationDelegate(this.OnBeginGetAllTeams);
            }
            if ((this.onEndGetAllTeamsDelegate == null)) {
                this.onEndGetAllTeamsDelegate = new EndOperationDelegate(this.OnEndGetAllTeams);
            }
            if ((this.onGetAllTeamsCompletedDelegate == null)) {
                this.onGetAllTeamsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllTeamsCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllTeamsDelegate, null, this.onEndGetAllTeamsDelegate, this.onGetAllTeamsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NPFaq.MatchServiceReference.IMatchService.BeginAddOrUpdateTeam(NPFaq.MatchServiceReference.team team, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddOrUpdateTeam(team, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int NPFaq.MatchServiceReference.IMatchService.EndAddOrUpdateTeam(System.IAsyncResult result) {
            return base.Channel.EndAddOrUpdateTeam(result);
        }
        
        private System.IAsyncResult OnBeginAddOrUpdateTeam(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NPFaq.MatchServiceReference.team team = ((NPFaq.MatchServiceReference.team)(inValues[0]));
            return ((NPFaq.MatchServiceReference.IMatchService)(this)).BeginAddOrUpdateTeam(team, callback, asyncState);
        }
        
        private object[] OnEndAddOrUpdateTeam(System.IAsyncResult result) {
            int retVal = ((NPFaq.MatchServiceReference.IMatchService)(this)).EndAddOrUpdateTeam(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddOrUpdateTeamCompleted(object state) {
            if ((this.AddOrUpdateTeamCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddOrUpdateTeamCompleted(this, new AddOrUpdateTeamCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddOrUpdateTeamAsync(NPFaq.MatchServiceReference.team team) {
            this.AddOrUpdateTeamAsync(team, null);
        }
        
        public void AddOrUpdateTeamAsync(NPFaq.MatchServiceReference.team team, object userState) {
            if ((this.onBeginAddOrUpdateTeamDelegate == null)) {
                this.onBeginAddOrUpdateTeamDelegate = new BeginOperationDelegate(this.OnBeginAddOrUpdateTeam);
            }
            if ((this.onEndAddOrUpdateTeamDelegate == null)) {
                this.onEndAddOrUpdateTeamDelegate = new EndOperationDelegate(this.OnEndAddOrUpdateTeam);
            }
            if ((this.onAddOrUpdateTeamCompletedDelegate == null)) {
                this.onAddOrUpdateTeamCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddOrUpdateTeamCompleted);
            }
            base.InvokeAsync(this.onBeginAddOrUpdateTeamDelegate, new object[] {
                        team}, this.onEndAddOrUpdateTeamDelegate, this.onAddOrUpdateTeamCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NPFaq.MatchServiceReference.IMatchService.BeginSearchTeam(string name, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSearchTeam(name, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<NPFaq.MatchServiceReference.team> NPFaq.MatchServiceReference.IMatchService.EndSearchTeam(System.IAsyncResult result) {
            return base.Channel.EndSearchTeam(result);
        }
        
        private System.IAsyncResult OnBeginSearchTeam(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name = ((string)(inValues[0]));
            return ((NPFaq.MatchServiceReference.IMatchService)(this)).BeginSearchTeam(name, callback, asyncState);
        }
        
        private object[] OnEndSearchTeam(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<NPFaq.MatchServiceReference.team> retVal = ((NPFaq.MatchServiceReference.IMatchService)(this)).EndSearchTeam(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSearchTeamCompleted(object state) {
            if ((this.SearchTeamCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SearchTeamCompleted(this, new SearchTeamCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SearchTeamAsync(string name) {
            this.SearchTeamAsync(name, null);
        }
        
        public void SearchTeamAsync(string name, object userState) {
            if ((this.onBeginSearchTeamDelegate == null)) {
                this.onBeginSearchTeamDelegate = new BeginOperationDelegate(this.OnBeginSearchTeam);
            }
            if ((this.onEndSearchTeamDelegate == null)) {
                this.onEndSearchTeamDelegate = new EndOperationDelegate(this.OnEndSearchTeam);
            }
            if ((this.onSearchTeamCompletedDelegate == null)) {
                this.onSearchTeamCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSearchTeamCompleted);
            }
            base.InvokeAsync(this.onBeginSearchTeamDelegate, new object[] {
                        name}, this.onEndSearchTeamDelegate, this.onSearchTeamCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NPFaq.MatchServiceReference.IMatchService.BeginDeleteTeamByID(System.Collections.ObjectModel.ObservableCollection<int> id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteTeamByID(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void NPFaq.MatchServiceReference.IMatchService.EndDeleteTeamByID(System.IAsyncResult result) {
            base.Channel.EndDeleteTeamByID(result);
        }
        
        private System.IAsyncResult OnBeginDeleteTeamByID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<int> id = ((System.Collections.ObjectModel.ObservableCollection<int>)(inValues[0]));
            return ((NPFaq.MatchServiceReference.IMatchService)(this)).BeginDeleteTeamByID(id, callback, asyncState);
        }
        
        private object[] OnEndDeleteTeamByID(System.IAsyncResult result) {
            ((NPFaq.MatchServiceReference.IMatchService)(this)).EndDeleteTeamByID(result);
            return null;
        }
        
        private void OnDeleteTeamByIDCompleted(object state) {
            if ((this.DeleteTeamByIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteTeamByIDCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteTeamByIDAsync(System.Collections.ObjectModel.ObservableCollection<int> id) {
            this.DeleteTeamByIDAsync(id, null);
        }
        
        public void DeleteTeamByIDAsync(System.Collections.ObjectModel.ObservableCollection<int> id, object userState) {
            if ((this.onBeginDeleteTeamByIDDelegate == null)) {
                this.onBeginDeleteTeamByIDDelegate = new BeginOperationDelegate(this.OnBeginDeleteTeamByID);
            }
            if ((this.onEndDeleteTeamByIDDelegate == null)) {
                this.onEndDeleteTeamByIDDelegate = new EndOperationDelegate(this.OnEndDeleteTeamByID);
            }
            if ((this.onDeleteTeamByIDCompletedDelegate == null)) {
                this.onDeleteTeamByIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteTeamByIDCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteTeamByIDDelegate, new object[] {
                        id}, this.onEndDeleteTeamByIDDelegate, this.onDeleteTeamByIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NPFaq.MatchServiceReference.IMatchService.BeginAddAttaches(System.Collections.ObjectModel.ObservableCollection<NPFaq.MatchServiceReference.attach> attaches, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddAttaches(attaches, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void NPFaq.MatchServiceReference.IMatchService.EndAddAttaches(System.IAsyncResult result) {
            base.Channel.EndAddAttaches(result);
        }
        
        private System.IAsyncResult OnBeginAddAttaches(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<NPFaq.MatchServiceReference.attach> attaches = ((System.Collections.ObjectModel.ObservableCollection<NPFaq.MatchServiceReference.attach>)(inValues[0]));
            return ((NPFaq.MatchServiceReference.IMatchService)(this)).BeginAddAttaches(attaches, callback, asyncState);
        }
        
        private object[] OnEndAddAttaches(System.IAsyncResult result) {
            ((NPFaq.MatchServiceReference.IMatchService)(this)).EndAddAttaches(result);
            return null;
        }
        
        private void OnAddAttachesCompleted(object state) {
            if ((this.AddAttachesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddAttachesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddAttachesAsync(System.Collections.ObjectModel.ObservableCollection<NPFaq.MatchServiceReference.attach> attaches) {
            this.AddAttachesAsync(attaches, null);
        }
        
        public void AddAttachesAsync(System.Collections.ObjectModel.ObservableCollection<NPFaq.MatchServiceReference.attach> attaches, object userState) {
            if ((this.onBeginAddAttachesDelegate == null)) {
                this.onBeginAddAttachesDelegate = new BeginOperationDelegate(this.OnBeginAddAttaches);
            }
            if ((this.onEndAddAttachesDelegate == null)) {
                this.onEndAddAttachesDelegate = new EndOperationDelegate(this.OnEndAddAttaches);
            }
            if ((this.onAddAttachesCompletedDelegate == null)) {
                this.onAddAttachesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddAttachesCompleted);
            }
            base.InvokeAsync(this.onBeginAddAttachesDelegate, new object[] {
                        attaches}, this.onEndAddAttachesDelegate, this.onAddAttachesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NPFaq.MatchServiceReference.IMatchService.BeginDeleteAttachesByMID(int id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteAttachesByMID(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void NPFaq.MatchServiceReference.IMatchService.EndDeleteAttachesByMID(System.IAsyncResult result) {
            base.Channel.EndDeleteAttachesByMID(result);
        }
        
        private System.IAsyncResult OnBeginDeleteAttachesByMID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            return ((NPFaq.MatchServiceReference.IMatchService)(this)).BeginDeleteAttachesByMID(id, callback, asyncState);
        }
        
        private object[] OnEndDeleteAttachesByMID(System.IAsyncResult result) {
            ((NPFaq.MatchServiceReference.IMatchService)(this)).EndDeleteAttachesByMID(result);
            return null;
        }
        
        private void OnDeleteAttachesByMIDCompleted(object state) {
            if ((this.DeleteAttachesByMIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteAttachesByMIDCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteAttachesByMIDAsync(int id) {
            this.DeleteAttachesByMIDAsync(id, null);
        }
        
        public void DeleteAttachesByMIDAsync(int id, object userState) {
            if ((this.onBeginDeleteAttachesByMIDDelegate == null)) {
                this.onBeginDeleteAttachesByMIDDelegate = new BeginOperationDelegate(this.OnBeginDeleteAttachesByMID);
            }
            if ((this.onEndDeleteAttachesByMIDDelegate == null)) {
                this.onEndDeleteAttachesByMIDDelegate = new EndOperationDelegate(this.OnEndDeleteAttachesByMID);
            }
            if ((this.onDeleteAttachesByMIDCompletedDelegate == null)) {
                this.onDeleteAttachesByMIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteAttachesByMIDCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteAttachesByMIDDelegate, new object[] {
                        id}, this.onEndDeleteAttachesByMIDDelegate, this.onDeleteAttachesByMIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NPFaq.MatchServiceReference.IMatchService.BeginGetUserByID(int id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUserByID(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NPFaq.MatchServiceReference.user NPFaq.MatchServiceReference.IMatchService.EndGetUserByID(System.IAsyncResult result) {
            return base.Channel.EndGetUserByID(result);
        }
        
        private System.IAsyncResult OnBeginGetUserByID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            return ((NPFaq.MatchServiceReference.IMatchService)(this)).BeginGetUserByID(id, callback, asyncState);
        }
        
        private object[] OnEndGetUserByID(System.IAsyncResult result) {
            NPFaq.MatchServiceReference.user retVal = ((NPFaq.MatchServiceReference.IMatchService)(this)).EndGetUserByID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUserByIDCompleted(object state) {
            if ((this.GetUserByIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUserByIDCompleted(this, new GetUserByIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUserByIDAsync(int id) {
            this.GetUserByIDAsync(id, null);
        }
        
        public void GetUserByIDAsync(int id, object userState) {
            if ((this.onBeginGetUserByIDDelegate == null)) {
                this.onBeginGetUserByIDDelegate = new BeginOperationDelegate(this.OnBeginGetUserByID);
            }
            if ((this.onEndGetUserByIDDelegate == null)) {
                this.onEndGetUserByIDDelegate = new EndOperationDelegate(this.OnEndGetUserByID);
            }
            if ((this.onGetUserByIDCompletedDelegate == null)) {
                this.onGetUserByIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUserByIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetUserByIDDelegate, new object[] {
                        id}, this.onEndGetUserByIDDelegate, this.onGetUserByIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NPFaq.MatchServiceReference.IMatchService.BeginGetMatchByID(int id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMatchByID(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NPFaq.MatchServiceReference.match NPFaq.MatchServiceReference.IMatchService.EndGetMatchByID(System.IAsyncResult result) {
            return base.Channel.EndGetMatchByID(result);
        }
        
        private System.IAsyncResult OnBeginGetMatchByID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            return ((NPFaq.MatchServiceReference.IMatchService)(this)).BeginGetMatchByID(id, callback, asyncState);
        }
        
        private object[] OnEndGetMatchByID(System.IAsyncResult result) {
            NPFaq.MatchServiceReference.match retVal = ((NPFaq.MatchServiceReference.IMatchService)(this)).EndGetMatchByID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMatchByIDCompleted(object state) {
            if ((this.GetMatchByIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMatchByIDCompleted(this, new GetMatchByIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMatchByIDAsync(int id) {
            this.GetMatchByIDAsync(id, null);
        }
        
        public void GetMatchByIDAsync(int id, object userState) {
            if ((this.onBeginGetMatchByIDDelegate == null)) {
                this.onBeginGetMatchByIDDelegate = new BeginOperationDelegate(this.OnBeginGetMatchByID);
            }
            if ((this.onEndGetMatchByIDDelegate == null)) {
                this.onEndGetMatchByIDDelegate = new EndOperationDelegate(this.OnEndGetMatchByID);
            }
            if ((this.onGetMatchByIDCompletedDelegate == null)) {
                this.onGetMatchByIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMatchByIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetMatchByIDDelegate, new object[] {
                        id}, this.onEndGetMatchByIDDelegate, this.onGetMatchByIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NPFaq.MatchServiceReference.IMatchService.BeginReviewTeam(System.Collections.ObjectModel.ObservableCollection<int> id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginReviewTeam(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void NPFaq.MatchServiceReference.IMatchService.EndReviewTeam(System.IAsyncResult result) {
            base.Channel.EndReviewTeam(result);
        }
        
        private System.IAsyncResult OnBeginReviewTeam(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<int> id = ((System.Collections.ObjectModel.ObservableCollection<int>)(inValues[0]));
            return ((NPFaq.MatchServiceReference.IMatchService)(this)).BeginReviewTeam(id, callback, asyncState);
        }
        
        private object[] OnEndReviewTeam(System.IAsyncResult result) {
            ((NPFaq.MatchServiceReference.IMatchService)(this)).EndReviewTeam(result);
            return null;
        }
        
        private void OnReviewTeamCompleted(object state) {
            if ((this.ReviewTeamCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ReviewTeamCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ReviewTeamAsync(System.Collections.ObjectModel.ObservableCollection<int> id) {
            this.ReviewTeamAsync(id, null);
        }
        
        public void ReviewTeamAsync(System.Collections.ObjectModel.ObservableCollection<int> id, object userState) {
            if ((this.onBeginReviewTeamDelegate == null)) {
                this.onBeginReviewTeamDelegate = new BeginOperationDelegate(this.OnBeginReviewTeam);
            }
            if ((this.onEndReviewTeamDelegate == null)) {
                this.onEndReviewTeamDelegate = new EndOperationDelegate(this.OnEndReviewTeam);
            }
            if ((this.onReviewTeamCompletedDelegate == null)) {
                this.onReviewTeamCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReviewTeamCompleted);
            }
            base.InvokeAsync(this.onBeginReviewTeamDelegate, new object[] {
                        id}, this.onEndReviewTeamDelegate, this.onReviewTeamCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NPFaq.MatchServiceReference.IMatchService.BeginMarkTeam(int id, string result, string rank, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMarkTeam(id, result, rank, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void NPFaq.MatchServiceReference.IMatchService.EndMarkTeam(System.IAsyncResult result) {
            base.Channel.EndMarkTeam(result);
        }
        
        private System.IAsyncResult OnBeginMarkTeam(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            string result = ((string)(inValues[1]));
            string rank = ((string)(inValues[2]));
            return ((NPFaq.MatchServiceReference.IMatchService)(this)).BeginMarkTeam(id, result, rank, callback, asyncState);
        }
        
        private object[] OnEndMarkTeam(System.IAsyncResult result) {
            ((NPFaq.MatchServiceReference.IMatchService)(this)).EndMarkTeam(result);
            return null;
        }
        
        private void OnMarkTeamCompleted(object state) {
            if ((this.MarkTeamCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MarkTeamCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MarkTeamAsync(int id, string result, string rank) {
            this.MarkTeamAsync(id, result, rank, null);
        }
        
        public void MarkTeamAsync(int id, string result, string rank, object userState) {
            if ((this.onBeginMarkTeamDelegate == null)) {
                this.onBeginMarkTeamDelegate = new BeginOperationDelegate(this.OnBeginMarkTeam);
            }
            if ((this.onEndMarkTeamDelegate == null)) {
                this.onEndMarkTeamDelegate = new EndOperationDelegate(this.OnEndMarkTeam);
            }
            if ((this.onMarkTeamCompletedDelegate == null)) {
                this.onMarkTeamCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMarkTeamCompleted);
            }
            base.InvokeAsync(this.onBeginMarkTeamDelegate, new object[] {
                        id,
                        result,
                        rank}, this.onEndMarkTeamDelegate, this.onMarkTeamCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override NPFaq.MatchServiceReference.IMatchService CreateChannel() {
            return new MatchServiceClientChannel(this);
        }
        
        private class MatchServiceClientChannel : ChannelBase<NPFaq.MatchServiceReference.IMatchService>, NPFaq.MatchServiceReference.IMatchService {
            
            public MatchServiceClientChannel(System.ServiceModel.ClientBase<NPFaq.MatchServiceReference.IMatchService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginDoWork(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("DoWork", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDoWork(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DoWork", _args, result);
            }
            
            public System.IAsyncResult BeginGetAttachsByIDAndType(int id, string type, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = id;
                _args[1] = type;
                System.IAsyncResult _result = base.BeginInvoke("GetAttachsByIDAndType", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<NPFaq.MatchServiceReference.MatchAttach> EndGetAttachsByIDAndType(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<NPFaq.MatchServiceReference.MatchAttach> _result = ((System.Collections.ObjectModel.ObservableCollection<NPFaq.MatchServiceReference.MatchAttach>)(base.EndInvoke("GetAttachsByIDAndType", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginLogin(string userName, string password, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = userName;
                _args[1] = password;
                System.IAsyncResult _result = base.BeginInvoke("Login", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndLogin(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("Login", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAllUsers(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetAllUsers", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<NPFaq.MatchServiceReference.user> EndGetAllUsers(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<NPFaq.MatchServiceReference.user> _result = ((System.Collections.ObjectModel.ObservableCollection<NPFaq.MatchServiceReference.user>)(base.EndInvoke("GetAllUsers", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetUserByName(string userName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = userName;
                System.IAsyncResult _result = base.BeginInvoke("GetUserByName", _args, callback, asyncState);
                return _result;
            }
            
            public NPFaq.MatchServiceReference.user EndGetUserByName(System.IAsyncResult result) {
                object[] _args = new object[0];
                NPFaq.MatchServiceReference.user _result = ((NPFaq.MatchServiceReference.user)(base.EndInvoke("GetUserByName", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddOrUpdateUser(NPFaq.MatchServiceReference.user user, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = user;
                System.IAsyncResult _result = base.BeginInvoke("AddOrUpdateUser", _args, callback, asyncState);
                return _result;
            }
            
            public void EndAddOrUpdateUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("AddOrUpdateUser", _args, result);
            }
            
            public System.IAsyncResult BeginSearchUser(string name, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = name;
                System.IAsyncResult _result = base.BeginInvoke("SearchUser", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<NPFaq.MatchServiceReference.user> EndSearchUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<NPFaq.MatchServiceReference.user> _result = ((System.Collections.ObjectModel.ObservableCollection<NPFaq.MatchServiceReference.user>)(base.EndInvoke("SearchUser", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteUserByID(System.Collections.ObjectModel.ObservableCollection<int> id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = id;
                System.IAsyncResult _result = base.BeginInvoke("DeleteUserByID", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDeleteUserByID(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DeleteUserByID", _args, result);
            }
            
            public System.IAsyncResult BeginAlterPassword(int id, string oldPwd, string newPwd, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = id;
                _args[1] = oldPwd;
                _args[2] = newPwd;
                System.IAsyncResult _result = base.BeginInvoke("AlterPassword", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndAlterPassword(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("AlterPassword", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAllMatches(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetAllMatches", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<NPFaq.MatchServiceReference.match> EndGetAllMatches(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<NPFaq.MatchServiceReference.match> _result = ((System.Collections.ObjectModel.ObservableCollection<NPFaq.MatchServiceReference.match>)(base.EndInvoke("GetAllMatches", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddOrUpdateMatch(NPFaq.MatchServiceReference.match match, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = match;
                System.IAsyncResult _result = base.BeginInvoke("AddOrUpdateMatch", _args, callback, asyncState);
                return _result;
            }
            
            public int EndAddOrUpdateMatch(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("AddOrUpdateMatch", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSearchMatch(string name, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = name;
                System.IAsyncResult _result = base.BeginInvoke("SearchMatch", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<NPFaq.MatchServiceReference.match> EndSearchMatch(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<NPFaq.MatchServiceReference.match> _result = ((System.Collections.ObjectModel.ObservableCollection<NPFaq.MatchServiceReference.match>)(base.EndInvoke("SearchMatch", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteMatchByID(System.Collections.ObjectModel.ObservableCollection<int> id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = id;
                System.IAsyncResult _result = base.BeginInvoke("DeleteMatchByID", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDeleteMatchByID(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DeleteMatchByID", _args, result);
            }
            
            public System.IAsyncResult BeginGetAllTeams(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetAllTeams", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<NPFaq.MatchServiceReference.team> EndGetAllTeams(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<NPFaq.MatchServiceReference.team> _result = ((System.Collections.ObjectModel.ObservableCollection<NPFaq.MatchServiceReference.team>)(base.EndInvoke("GetAllTeams", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddOrUpdateTeam(NPFaq.MatchServiceReference.team team, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = team;
                System.IAsyncResult _result = base.BeginInvoke("AddOrUpdateTeam", _args, callback, asyncState);
                return _result;
            }
            
            public int EndAddOrUpdateTeam(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("AddOrUpdateTeam", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSearchTeam(string name, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = name;
                System.IAsyncResult _result = base.BeginInvoke("SearchTeam", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<NPFaq.MatchServiceReference.team> EndSearchTeam(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<NPFaq.MatchServiceReference.team> _result = ((System.Collections.ObjectModel.ObservableCollection<NPFaq.MatchServiceReference.team>)(base.EndInvoke("SearchTeam", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteTeamByID(System.Collections.ObjectModel.ObservableCollection<int> id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = id;
                System.IAsyncResult _result = base.BeginInvoke("DeleteTeamByID", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDeleteTeamByID(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DeleteTeamByID", _args, result);
            }
            
            public System.IAsyncResult BeginAddAttaches(System.Collections.ObjectModel.ObservableCollection<NPFaq.MatchServiceReference.attach> attaches, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = attaches;
                System.IAsyncResult _result = base.BeginInvoke("AddAttaches", _args, callback, asyncState);
                return _result;
            }
            
            public void EndAddAttaches(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("AddAttaches", _args, result);
            }
            
            public System.IAsyncResult BeginDeleteAttachesByMID(int id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = id;
                System.IAsyncResult _result = base.BeginInvoke("DeleteAttachesByMID", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDeleteAttachesByMID(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DeleteAttachesByMID", _args, result);
            }
            
            public System.IAsyncResult BeginGetUserByID(int id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = id;
                System.IAsyncResult _result = base.BeginInvoke("GetUserByID", _args, callback, asyncState);
                return _result;
            }
            
            public NPFaq.MatchServiceReference.user EndGetUserByID(System.IAsyncResult result) {
                object[] _args = new object[0];
                NPFaq.MatchServiceReference.user _result = ((NPFaq.MatchServiceReference.user)(base.EndInvoke("GetUserByID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetMatchByID(int id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = id;
                System.IAsyncResult _result = base.BeginInvoke("GetMatchByID", _args, callback, asyncState);
                return _result;
            }
            
            public NPFaq.MatchServiceReference.match EndGetMatchByID(System.IAsyncResult result) {
                object[] _args = new object[0];
                NPFaq.MatchServiceReference.match _result = ((NPFaq.MatchServiceReference.match)(base.EndInvoke("GetMatchByID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginReviewTeam(System.Collections.ObjectModel.ObservableCollection<int> id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = id;
                System.IAsyncResult _result = base.BeginInvoke("ReviewTeam", _args, callback, asyncState);
                return _result;
            }
            
            public void EndReviewTeam(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("ReviewTeam", _args, result);
            }
            
            public System.IAsyncResult BeginMarkTeam(int id, string result, string rank, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = id;
                _args[1] = result;
                _args[2] = rank;
                System.IAsyncResult _result = base.BeginInvoke("MarkTeam", _args, callback, asyncState);
                return _result;
            }
            
            public void EndMarkTeam(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("MarkTeam", _args, result);
            }
        }
    }
}
